package Interface.Hoteleria;

import Interface.Acceso;
import Interface.GUIM;
import LN.Alquileres.Habitacion;
import LN.Alquileres.Tarifa_Habitacion;
import LN.Varios.Hosteria;
import java.util.LinkedList;
import java.util.List;
import java.util.Observable;
import java.util.Observer;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

public class Parametros_Habitacion extends javax.swing.JPanel implements Observer {

    private Hosteria unaHosteria;
    private List<Tarifa_Habitacion> tarifas;
    private Habitacion unaHabitacion;

    public Parametros_Habitacion(Hosteria unaHosteria, Habitacion laHabitacion) {
        this.unaHosteria = unaHosteria;
        this.tarifas = unaHosteria.getTarifas_Habitacion();
        this.unaHabitacion = laHabitacion;
        unaHosteria.addObserver(this);

        initComponents();
        GUIM.decimalPositivo(txt_cuadruple);
        GUIM.decimalPositivo(txt_doble);
        GUIM.decimalPositivo(txt_single);
        GUIM.decimalPositivo(txt_triple);

        cargarInterface();

        if (!unaHosteria.getHabitaciones().isEmpty()) {

            if (unaHabitacion != null) {
                cbx_Habitaciones.setSelectedItem(laHabitacion);
                cbx_Habitaciones.setEnabled(false);
            } else {
                cbx_Habitaciones.setSelectedIndex(0);
                cbx_Habitaciones.setEnabled(true);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupo_Habilitacion = new javax.swing.ButtonGroup();
        grupo_Limpieza = new javax.swing.ButtonGroup();
        nuevaLimpieza = new javax.swing.ButtonGroup();
        nuevaHabilitacion = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel4 = new javax.swing.JPanel();
        jXTaskPane1 = new org.jdesktop.swingx.JXTaskPane();
        btn_agregarHabitacion = new javax.swing.JButton();
        radio_nuevaDehabilitada = new javax.swing.JRadioButton();
        radio_nuevaHabilitada = new javax.swing.JRadioButton();
        radio_nuevaSucia = new javax.swing.JRadioButton();
        radio_nuevaLimpia = new javax.swing.JRadioButton();
        jLabel6 = new javax.swing.JLabel();
        txt_numeroHab = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jXTaskPane2 = new org.jdesktop.swingx.JXTaskPane();
        btn_eliminarHabitacion = new javax.swing.JButton();
        jLabelelim = new javax.swing.JLabel();
        cbx_Hab_a_Eliminarse = new javax.swing.JComboBox();
        jPanel1 = new javax.swing.JPanel();
        cbx_Habitaciones = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        radio_sucia = new javax.swing.JRadioButton();
        radio_deshabilitado = new javax.swing.JRadioButton();
        radio_limpia = new javax.swing.JRadioButton();
        radio_habilitado = new javax.swing.JRadioButton();
        btn_Aceptar = new javax.swing.JButton();
        btn_Cancelar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txt_single = new javax.swing.JTextField();
        txt_doble = new javax.swing.JTextField();
        txt_triple = new javax.swing.JTextField();
        txt_cuadruple = new javax.swing.JTextField();

        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.LINE_AXIS));

        jScrollPane1.setBorder(null);
        jScrollPane1.setMaximumSize(null);
        jScrollPane1.setMinimumSize(null);

        jXTaskPane1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/down.png"))); // NOI18N
        jXTaskPane1.setScrollOnExpand(true);
        jXTaskPane1.setTitle("Agregar una Nueva Habitacion");
        jXTaskPane1.setAutoscrolls(true);

        btn_agregarHabitacion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Add.png"))); // NOI18N
        btn_agregarHabitacion.setText("Agregar");
        btn_agregarHabitacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_agregarHabitacionActionPerformed(evt);
            }
        });

        radio_nuevaDehabilitada.setFont(new java.awt.Font("Bodoni MT", 1, 14)); // NOI18N
        radio_nuevaDehabilitada.setText("No Habilitada");

        radio_nuevaHabilitada.setFont(new java.awt.Font("Bodoni MT", 1, 14)); // NOI18N
        radio_nuevaHabilitada.setText("Habilitada");

        radio_nuevaSucia.setFont(new java.awt.Font("Bodoni MT", 1, 14)); // NOI18N
        radio_nuevaSucia.setText("Sucia");

        radio_nuevaLimpia.setFont(new java.awt.Font("Bodoni MT", 1, 14)); // NOI18N
        radio_nuevaLimpia.setText("Limpia");

        jLabel6.setFont(new java.awt.Font("Bodoni MT", 1, 14)); // NOI18N
        jLabel6.setText("Número de Habitación:");

        txt_numeroHab.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_numeroHabKeyTyped(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Eye.png"))); // NOI18N
        jButton1.setText("Eliminadas");
        jButton1.setBorder(new org.jdesktop.swingx.border.IconBorder());
        jButton1.setHorizontalAlignment(javax.swing.SwingConstants.LEADING);
        jButton1.setPreferredSize(new java.awt.Dimension(127, 50));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jXTaskPane1Layout = new javax.swing.GroupLayout(jXTaskPane1.getContentPane());
        jXTaskPane1.getContentPane().setLayout(jXTaskPane1Layout);
        jXTaskPane1Layout.setHorizontalGroup(
            jXTaskPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jXTaskPane1Layout.createSequentialGroup()
                .addGroup(jXTaskPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jXTaskPane1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_numeroHab, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                .addGroup(jXTaskPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(radio_nuevaHabilitada)
                    .addComponent(radio_nuevaDehabilitada))
                .addGap(18, 18, 18)
                .addGroup(jXTaskPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(radio_nuevaSucia)
                    .addComponent(radio_nuevaLimpia))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                .addComponent(btn_agregarHabitacion)
                .addGap(22, 22, 22))
        );
        jXTaskPane1Layout.setVerticalGroup(
            jXTaskPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jXTaskPane1Layout.createSequentialGroup()
                .addGroup(jXTaskPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radio_nuevaHabilitada)
                    .addComponent(radio_nuevaLimpia)
                    .addComponent(jLabel6)
                    .addComponent(txt_numeroHab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jXTaskPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radio_nuevaDehabilitada)
                    .addComponent(radio_nuevaSucia)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addComponent(btn_agregarHabitacion)
        );

        jXTaskPane2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Reciclar.png"))); // NOI18N
        jXTaskPane2.setScrollOnExpand(true);
        jXTaskPane2.setTitle("Eliminar una Habitacion");
        jXTaskPane2.setAutoscrolls(true);

        btn_eliminarHabitacion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Recyclebin-Empty.png"))); // NOI18N
        btn_eliminarHabitacion.setText("Eliminar");
        btn_eliminarHabitacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_eliminarHabitacionActionPerformed(evt);
            }
        });

        jLabelelim.setFont(new java.awt.Font("Bodoni MT", 1, 14)); // NOI18N
        jLabelelim.setText("Seleccione la Habitación a ser Eliminada");

        cbx_Hab_a_Eliminarse.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbx_Hab_a_EliminarseItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jXTaskPane2Layout = new javax.swing.GroupLayout(jXTaskPane2.getContentPane());
        jXTaskPane2.getContentPane().setLayout(jXTaskPane2Layout);
        jXTaskPane2Layout.setHorizontalGroup(
            jXTaskPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jXTaskPane2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelelim)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbx_Hab_a_Eliminarse, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 186, Short.MAX_VALUE)
                .addComponent(btn_eliminarHabitacion)
                .addGap(22, 22, 22))
        );
        jXTaskPane2Layout.setVerticalGroup(
            jXTaskPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jXTaskPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabelelim)
                .addComponent(btn_eliminarHabitacion)
                .addComponent(cbx_Hab_a_Eliminarse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Editar Parámetros"));

        cbx_Habitaciones.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbx_HabitacionesItemStateChanged(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Bodoni MT", 1, 14)); // NOI18N
        jLabel1.setText("Habitacion Número:");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        radio_sucia.setFont(new java.awt.Font("Bodoni MT", 1, 14)); // NOI18N
        radio_sucia.setText("Sucia");

        radio_deshabilitado.setFont(new java.awt.Font("Bodoni MT", 1, 14)); // NOI18N
        radio_deshabilitado.setText("No Habilitada");

        radio_limpia.setFont(new java.awt.Font("Bodoni MT", 1, 14)); // NOI18N
        radio_limpia.setText("Limpia");

        radio_habilitado.setFont(new java.awt.Font("Bodoni MT", 1, 14)); // NOI18N
        radio_habilitado.setText("Habilitada");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(radio_habilitado)
                    .addComponent(radio_deshabilitado))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(radio_limpia)
                    .addComponent(radio_sucia))
                .addGap(35, 35, 35))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radio_habilitado)
                    .addComponent(radio_limpia))
                .addGap(12, 12, 12)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radio_deshabilitado)
                    .addComponent(radio_sucia)))
        );

        btn_Aceptar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Guardar_2.png"))); // NOI18N
        btn_Aceptar.setText("Aceptar");
        btn_Aceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_AceptarActionPerformed(evt);
            }
        });

        btn_Cancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Close.png"))); // NOI18N
        btn_Cancelar.setText("Cancelar");
        btn_Cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_CancelarActionPerformed(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Tarifas de Habitacion"));

        jLabel2.setFont(new java.awt.Font("Bodoni MT", 1, 14)); // NOI18N
        jLabel2.setText("Sigles");

        jLabel3.setFont(new java.awt.Font("Bodoni MT", 1, 14)); // NOI18N
        jLabel3.setText("Dobles");

        jLabel4.setFont(new java.awt.Font("Bodoni MT", 1, 14)); // NOI18N
        jLabel4.setText("Triples");

        jLabel5.setFont(new java.awt.Font("Bodoni MT", 1, 14)); // NOI18N
        jLabel5.setText("Cuadruples");

        txt_single.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_singleKeyTyped(evt);
            }
        });

        txt_doble.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_dobleKeyTyped(evt);
            }
        });

        txt_triple.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_tripleKeyTyped(evt);
            }
        });

        txt_cuadruple.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_cuadrupleKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_doble, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_single, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_triple, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_cuadruple, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txt_triple, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txt_cuadruple, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txt_single, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txt_doble, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbx_Habitaciones, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btn_Aceptar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_Cancelar))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cbx_Habitaciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_Aceptar)
                    .addComponent(btn_Cancelar))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jXTaskPane2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jXTaskPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jXTaskPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jXTaskPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jScrollPane1.setViewportView(jPanel4);

        add(jScrollPane1);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_AceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_AceptarActionPerformed
        Habitacion seleccionada = (Habitacion) cbx_Habitaciones.getSelectedItem();
        boolean limpia = false;
        boolean habilitada = false;

        if (radio_deshabilitado.isSelected()) {
            habilitada = false;
        } else if (radio_habilitado.isSelected()) {
            habilitada = true;
        }


        if (radio_limpia.isSelected()) {
            limpia = true;
        } else if (radio_sucia.isSelected()) {
            limpia = false;
        }


        double precios[] = new double[4];
        double tarifasAnteriores[] = new double[4];

        precios[0] = Double.valueOf(txt_single.getText());
        precios[1] = Double.valueOf(txt_doble.getText());
        precios[2] = Double.valueOf(txt_triple.getText());
        precios[3] = Double.valueOf(txt_cuadruple.getText());

        for (Tarifa_Habitacion unaTarifa_Habitacion : unaHosteria.getTarifas_Habitacion()) {
            switch (unaTarifa_Habitacion.getTipo()) {
                case "Single":
                    tarifasAnteriores[0] = unaTarifa_Habitacion.getPrecio();
                case "Doble Matrimonial":
                case "Doble Separada":
                    tarifasAnteriores[1] = unaTarifa_Habitacion.getPrecio();
                case "Matrimonial + 1":
                case "Trible Separada":
                    tarifasAnteriores[2] = unaTarifa_Habitacion.getPrecio();
                case "Matrimonial + 2":
                case "Cuadruble Separada":
                    tarifasAnteriores[3] = unaTarifa_Habitacion.getPrecio();
            }
        }

        if (precios[0] != tarifasAnteriores[0]) {
            unaHosteria.crearAuditoria("MOD", "Modificó la tarifa de habitacion singles de " + String.valueOf(tarifasAnteriores[0]) + " a " + txt_single.getText(), Acceso.getUsuario(), GUIM.getHoraActual());
        }
        if (precios[1] != tarifasAnteriores[1]) {
            unaHosteria.crearAuditoria("MOD", "Modificó la tarifa de habitacion dobles de " + String.valueOf(tarifasAnteriores[1]) + " a " + txt_doble.getText(), Acceso.getUsuario(), GUIM.getHoraActual());
        }
        if (precios[2] != tarifasAnteriores[2]) {
            unaHosteria.crearAuditoria("MOD", "Modificó la tarifa de habitacion Tribles de " + String.valueOf(tarifasAnteriores[2]) + " a " + txt_triple.getText(), Acceso.getUsuario(), GUIM.getHoraActual());
        }
        if (precios[3] != tarifasAnteriores[3]) {
            unaHosteria.crearAuditoria("MOD", "Modificó la tarifa de habitacion Cuadrubles de " + String.valueOf(tarifasAnteriores[3]) + " a " + txt_cuadruple.getText(), Acceso.getUsuario(), GUIM.getHoraActual());
        }

        unaHosteria.cambiarEstado_Habitacion(seleccionada, habilitada, limpia, precios);
        unaHosteria.crearAuditoria("MOD", "Modificó un estado (Habitacion " + seleccionada.getNumero() + ")", Acceso.getUsuario(), GUIM.getHoraActual());
//        SwingUtilities.getWindowAncestor(this).dispose();

    }//GEN-LAST:event_btn_AceptarActionPerformed

    private void cbx_HabitacionesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbx_HabitacionesItemStateChanged
        Habitacion habSeleccionada = (Habitacion) cbx_Habitaciones.getSelectedItem();
        if (habSeleccionada.isHabilitado()) {
            radio_habilitado.setSelected(true);
        } else if (!habSeleccionada.isHabilitado()) {
            radio_deshabilitado.setSelected(true);
        }

        if (habSeleccionada.isEstado_limpieza()) {
            radio_limpia.setSelected(true);
        } else if (!habSeleccionada.isEstado_limpieza()) {
            radio_sucia.setSelected(true);
        }

    }//GEN-LAST:event_cbx_HabitacionesItemStateChanged

    private void btn_CancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_CancelarActionPerformed
        SwingUtilities.getWindowAncestor(this).dispose();
    }//GEN-LAST:event_btn_CancelarActionPerformed

    private void btn_agregarHabitacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_agregarHabitacionActionPerformed
        String numeroHabitacion = txt_numeroHab.getText();

        boolean habilitacion = false;
        boolean limpieza = false;
        boolean reactivar = false;

        if (!"".equals(txt_numeroHab.getText())) {
            if (radio_nuevaHabilitada.isSelected()) {
                habilitacion = true;
            } else if (radio_nuevaDehabilitada.isSelected()) {
                habilitacion = false;
            }
            if (radio_nuevaLimpia.isSelected()) {
                limpieza = true;
            } else if (radio_nuevaSucia.isSelected()) {
                limpieza = false;
            }

            for (Habitacion unaHab : unaHosteria.getHabitaciones()) {
                if (unaHab.getNumero() == Integer.parseInt(numeroHabitacion)) {
                    int res = JOptionPane.showConfirmDialog(this, "Éste Número corresponde a un Habitación eliminada con anterioridad, ¿Desea Reactivarla?",
                            "Advertencia", JOptionPane.YES_NO_OPTION);
                    if (res == JOptionPane.YES_OPTION) {
                        reactivar = true;

                    }
                }

            }

            if (reactivar) {
                unaHosteria.reactivarHabitacion(Integer.parseInt(numeroHabitacion));
                JOptionPane.showMessageDialog(this, "La nueva Habitación número " + numeroHabitacion + " se ha agregado con exito");

            } else {
                try {
                    unaHosteria.agregarHabitacion(numeroHabitacion, limpieza, habilitacion);
                    JOptionPane.showMessageDialog(this, "La nueva Habitación número " + numeroHabitacion + " se ha agregado con exito");

                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(this, ex.getMessage());
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Debe igresar un Número de Habitacion para continuar");
            txt_numeroHab.grabFocus();
        }

    }//GEN-LAST:event_btn_agregarHabitacionActionPerformed

    private void btn_eliminarHabitacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_eliminarHabitacionActionPerformed
        Habitacion aEliminar = (Habitacion) cbx_Hab_a_Eliminarse.getSelectedItem();
        try {
            unaHosteria.eliminarHabitacion(aEliminar);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }//GEN-LAST:event_btn_eliminarHabitacionActionPerformed

    private void cbx_Hab_a_EliminarseItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbx_Hab_a_EliminarseItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_cbx_Hab_a_EliminarseItemStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        JDialog frame;
        if (SwingUtilities.getWindowAncestor(this) instanceof JDialog) {
            frame = new JDialog((JDialog) SwingUtilities.getWindowAncestor(this), true);
        } else {
            frame = new JDialog((JFrame) SwingUtilities.getWindowAncestor(this), true);
        }
        int numeroHab = 0;
        Habitaciones_Eliminadas eliminadas = new Habitaciones_Eliminadas(unaHosteria.getHabitaciones());
        frame.getContentPane().removeAll();
        frame.getContentPane().add(eliminadas);
        frame.pack();
        frame.setLocationRelativeTo(null);
        frame.show();

        if (eliminadas.getHabitacion_Deleccionada().getSelectedValue() != null) {
            numeroHab = ((Habitacion) eliminadas.getHabitacion_Deleccionada().getSelectedValue()).getNumero();
            txt_numeroHab.setText(String.valueOf(numeroHab));
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void txt_numeroHabKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_numeroHabKeyTyped
        if (!GUIM.enteroPuro(evt.getKeyChar())) {
            evt.consume();
        }


    }//GEN-LAST:event_txt_numeroHabKeyTyped

    private void txt_singleKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_singleKeyTyped
         if (!GUIM.esEntero(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_txt_singleKeyTyped

    private void txt_dobleKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_dobleKeyTyped
 if (!GUIM.esEntero(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_txt_dobleKeyTyped

    private void txt_cuadrupleKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_cuadrupleKeyTyped
 if (!GUIM.esEntero(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_txt_cuadrupleKeyTyped

    private void txt_tripleKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_tripleKeyTyped
 if (!GUIM.esEntero(evt.getKeyChar())) {
            evt.consume();
        }
    }//GEN-LAST:event_txt_tripleKeyTyped

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Aceptar;
    private javax.swing.JButton btn_Cancelar;
    private javax.swing.JButton btn_agregarHabitacion;
    private javax.swing.JButton btn_eliminarHabitacion;
    private javax.swing.JComboBox cbx_Hab_a_Eliminarse;
    private javax.swing.JComboBox cbx_Habitaciones;
    private javax.swing.ButtonGroup grupo_Habilitacion;
    private javax.swing.ButtonGroup grupo_Limpieza;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabelelim;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private org.jdesktop.swingx.JXTaskPane jXTaskPane1;
    private org.jdesktop.swingx.JXTaskPane jXTaskPane2;
    private javax.swing.ButtonGroup nuevaHabilitacion;
    private javax.swing.ButtonGroup nuevaLimpieza;
    private javax.swing.JRadioButton radio_deshabilitado;
    private javax.swing.JRadioButton radio_habilitado;
    private javax.swing.JRadioButton radio_limpia;
    private javax.swing.JRadioButton radio_nuevaDehabilitada;
    private javax.swing.JRadioButton radio_nuevaHabilitada;
    private javax.swing.JRadioButton radio_nuevaLimpia;
    private javax.swing.JRadioButton radio_nuevaSucia;
    private javax.swing.JRadioButton radio_sucia;
    private javax.swing.JTextField txt_cuadruple;
    private javax.swing.JTextField txt_doble;
    private javax.swing.JTextField txt_numeroHab;
    private javax.swing.JTextField txt_single;
    private javax.swing.JTextField txt_triple;
    // End of variables declaration//GEN-END:variables

    private void cargarInterface() {

        grupo_Habilitacion.add(radio_habilitado);
        grupo_Habilitacion.add(radio_deshabilitado);
        grupo_Limpieza.add(radio_sucia);
        grupo_Limpieza.add(radio_limpia);
        nuevaHabilitacion.add(radio_nuevaDehabilitada);
        nuevaHabilitacion.add(radio_nuevaHabilitada);
        nuevaLimpieza.add(radio_nuevaLimpia);
        nuevaLimpieza.add(radio_nuevaSucia);

        radio_nuevaHabilitada.setSelected(true);
        radio_nuevaLimpia.setSelected(true);

        cbx_Hab_a_Eliminarse.setModel(new DefaultComboBoxModel());
        cbx_Habitaciones.setModel(new DefaultComboBoxModel());
        if (!unaHosteria.getHabitaciones().isEmpty()) {
            for (Habitacion habitaciones : unaHosteria.getHabitaciones()) {
                if (habitaciones.getEstado_ocupacion().equals("Disponible")) {
                    cbx_Habitaciones.addItem(habitaciones);
                    cbx_Hab_a_Eliminarse.addItem(habitaciones);
                }

            }
        }

        for (Tarifa_Habitacion unaTarifa_Habitacion : tarifas) {
            switch (unaTarifa_Habitacion.getTipo()) {
                case Tarifa_Habitacion.SINGLE:
                    txt_single.setText(String.valueOf(unaTarifa_Habitacion.getPrecio()));
                case Tarifa_Habitacion.DOBLE_MATRIMONIAL:
                case Tarifa_Habitacion.DOBLE_SEPARADA:
                    txt_doble.setText(String.valueOf(unaTarifa_Habitacion.getPrecio()));
                case Tarifa_Habitacion.TRIBLE_MAT_1:
                case Tarifa_Habitacion.TRIBLE_SEPARADA:
                    txt_triple.setText(String.valueOf(unaTarifa_Habitacion.getPrecio()));
                case Tarifa_Habitacion.CUADRUBLE_MAT_2:
                case Tarifa_Habitacion.CUADRUBLE_SEPARADA:
                    txt_cuadruple.setText(String.valueOf(unaTarifa_Habitacion.getPrecio()));

            }
        }
        txt_numeroHab.setText(valorHabitacion());
    }

    private String valorHabitacion() {
        List<Habitacion> filtro = new LinkedList<>();
        filtro.clear();
        int numero = 0;
        for (Habitacion unHabitacion : unaHosteria.getHabitaciones()) {
            if (!unHabitacion.isEliminado()) {
                if (unHabitacion.getNumero() > numero) {
                    numero = unHabitacion.getNumero();
                }
            }
        }
        return String.valueOf(numero + 1);
    }

    @Override
    public void update(Observable o, Object arg) {
        if (arg instanceof Habitacion) {
            cargarInterface();
        }
    }
}
